name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  CI:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache Cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index
      uses: actions/cache@v2
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache Cargo installs
      uses: actions/cache@v2
      with:
        path: ~/.cargo/bin
        key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-bin-

    - name: Cache Rustup toolchains
      uses: actions/cache@v2
      with:
        path: |
          ~/.rustup/toolchains
          ~/.rustup/update-hashes
        key: ${{ runner.os }}-rustup-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-rustup-

    - name: Cache build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-target-

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

    - name: Check
      uses: actions-rs/cargo@v1
      with:
        command: check

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose

    - name: Clippy (library)
      uses: actions-rs/clippy-check@v1
      with:
        name: Clippy (library)
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Clippy (tests)
      uses: actions-rs/clippy-check@v1
      with:
        name: Clippy (tests)
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --tests

    - name: Rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Build Docs
      uses: actions-rs/cargo@v1
      with:
        command: doc

    - name: Deploy Docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./target/doc
        force_orphan: true
